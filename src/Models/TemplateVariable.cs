// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Resend.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TemplateVariable : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Timestamp indicating when the variable was created.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The fallback value of the variable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value? FallbackValue { get; set; }
#nullable restore
#else
        public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value FallbackValue { get; set; }
#endif
        /// <summary>The ID of the template variable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The key of the variable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Key { get; set; }
#nullable restore
#else
        public string Key { get; set; }
#endif
        /// <summary>The type of the variable.</summary>
        public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_type? Type { get; set; }
        /// <summary>Timestamp indicating when the variable was last updated.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable"/> and sets the default values.
        /// </summary>
        public TemplateVariable()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "fallback_value", n => { FallbackValue = n.GetObjectValue<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value>(global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "key", n => { Key = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_type>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value>("fallback_value", FallbackValue);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("key", Key);
            writer.WriteEnumValue<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_type>("type", Type);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="double"/>, <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember1"/>, <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember2"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TemplateVariable_fallback_value : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember1? TemplateVariableFallbackValueMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember1 TemplateVariableFallbackValueMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember2? TemplateVariableFallbackValueMember2 { get; set; }
#nullable restore
#else
            public global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember2 TemplateVariableFallbackValueMember2 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.TemplateVariable_fallback_value();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TemplateVariableFallbackValueMember1 = new global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember1();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TemplateVariableFallbackValueMember2 = new global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember2();
                }
                else if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(TemplateVariableFallbackValueMember1 != null)
                {
                    return TemplateVariableFallbackValueMember1.GetFieldDeserializers();
                }
                else if(TemplateVariableFallbackValueMember2 != null)
                {
                    return TemplateVariableFallbackValueMember2.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
                if(TemplateVariableFallbackValueMember1 != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember1>(null, TemplateVariableFallbackValueMember1);
                }
                else if(TemplateVariableFallbackValueMember2 != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable_fallback_valueMember2>(null, TemplateVariableFallbackValueMember2);
                }
                else if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
