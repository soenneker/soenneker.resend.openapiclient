// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Resend.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Template : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The alias of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Alias { get; set; }
#nullable restore
#else
        public string Alias { get; set; }
#endif
        /// <summary>Timestamp indicating when the template was created.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The ID of the current version of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrentVersionId { get; set; }
#nullable restore
#else
        public string CurrentVersionId { get; set; }
#endif
        /// <summary>Sender email address. To include a friendly name, use the format &quot;Your Name &lt;sender@domain.com&gt;&quot;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? From { get; set; }
#nullable restore
#else
        public string From { get; set; }
#endif
        /// <summary>Indicates whether the template has unpublished versions.</summary>
        public bool? HasUnpublishedVersions { get; set; }
        /// <summary>The HTML version of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Html { get; set; }
#nullable restore
#else
        public string Html { get; set; }
#endif
        /// <summary>The ID of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The type of object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Object { get; set; }
#nullable restore
#else
        public string Object { get; set; }
#endif
        /// <summary>Timestamp indicating when the template was published.</summary>
        public DateTimeOffset? PublishedAt { get; set; }
        /// <summary>Reply-to email addresses.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ReplyTo { get; set; }
#nullable restore
#else
        public List<string> ReplyTo { get; set; }
#endif
        /// <summary>The publication status of the template.</summary>
        public global::Soenneker.Resend.OpenApiClient.Models.Template_status? Status { get; set; }
        /// <summary>Email subject.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>The plain text version of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; set; }
#nullable restore
#else
        public string Text { get; set; }
#endif
        /// <summary>Timestamp indicating when the template was last updated.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The variables property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable>? Variables { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable> Variables { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Resend.OpenApiClient.Models.Template"/> and sets the default values.
        /// </summary>
        public Template()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Resend.OpenApiClient.Models.Template"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Resend.OpenApiClient.Models.Template CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Resend.OpenApiClient.Models.Template();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alias", n => { Alias = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "current_version_id", n => { CurrentVersionId = n.GetStringValue(); } },
                { "from", n => { From = n.GetStringValue(); } },
                { "has_unpublished_versions", n => { HasUnpublishedVersions = n.GetBoolValue(); } },
                { "html", n => { Html = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "object", n => { Object = n.GetStringValue(); } },
                { "published_at", n => { PublishedAt = n.GetDateTimeOffsetValue(); } },
                { "reply_to", n => { ReplyTo = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Resend.OpenApiClient.Models.Template_status>(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "text", n => { Text = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "variables", n => { Variables = n.GetCollectionOfObjectValues<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable>(global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("alias", Alias);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("current_version_id", CurrentVersionId);
            writer.WriteStringValue("from", From);
            writer.WriteBoolValue("has_unpublished_versions", HasUnpublishedVersions);
            writer.WriteStringValue("html", Html);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("object", Object);
            writer.WriteDateTimeOffsetValue("published_at", PublishedAt);
            writer.WriteCollectionOfPrimitiveValues<string>("reply_to", ReplyTo);
            writer.WriteEnumValue<global::Soenneker.Resend.OpenApiClient.Models.Template_status>("status", Status);
            writer.WriteStringValue("subject", Subject);
            writer.WriteStringValue("text", Text);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Resend.OpenApiClient.Models.TemplateVariable>("variables", Variables);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
